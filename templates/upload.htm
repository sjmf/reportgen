<!DOCTYPE html>
<title>Upload Files</title>
<!-- Online resources -->
<link rel="stylesheet" href="http://fonts.googleapis.com/icon?family=Material+Icons">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.6/css/materialize.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/4.3.0/min/dropzone.min.css">

<script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.6/js/materialize.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/4.3.0/min/dropzone.min.js"></script>

<style type="text/css">
nav.top-nav a.page-title { line-height: 122px; font-size: 48px; }
nav.top-nav { height: 122px; }
dt:after { content: ": "; }
.caption 
{ font-size: 1.25rem; font-weight: 300; }
.dropzone 
{ border: 2px dashed #2196F3; border-radius: 5px; }
.dropzone .dz-preview.dz-file-preview .dz-image
{ background: #82b1ff; border-radius: 4px; }
.dropzone .dz-preview .dz-progress 
{ background: #2196F3; border-radius: 0; height:5px; }
.dropzone .dz-preview .dz-progress .dz-upload
{ background: #3949ab; border-radius: 0; }
#upload-progress.progress.collapsed 
{ opacity:0; width: 0; transition: opacity 2s ease-out; }
#upload-progress.progress 
{ width: 50%; margin: 0 auto; }
.fixed-action-btn 
{ position: absolute; display: inline-block; right: 32px; bottom: 32px; }
</style>

<meta name="viewport" content="width=device-width, initial-scale=1.0"/>

<body>

<nav class="top-nav indigo darken-1">
  <div class="container">
    <div class="nav-wrapper"> <a class="page-title">BAX Report Generator</a> </div>
  </div>
</nav>

<main>
<div class="container"><div class="section">

<div class="row"><div class="col s12">
  <p class="caption">This form generates a PDF report from a BuildAX LRS dataset. 
    You may upload multiple data files in the binary formats (.bax, .bin), or 
    plaintext (.csv, .txt) formats. You may also upload a BAX_INFO.BIN file which will 
    be used to decode data stored encrypted within the data files. </p>
</div></div><!--row,col s12-->


<div class="row"><div class="col s12">
  <div class="card"><div class="card-content">

    <div class="row"><div class="col s12">
      <span class="card-title">Upload data files</span>
      </div></div>

    <form action="/upload" class="dropzone" id="file-drop">
      <div class="dz-message needsclick">
        Drop files here or click to upload.<br>
        <span class="note needsclick">(Accepts types: <strong>.bin .bax .csv .txt)</strong></span>
      </div>

      <div id="#file-actions" class="fixed-action-btn horizontal click-to-toggle">
        <a class="btn-floating btn-large blue">
          <i class="material-icons">menu</i>
        </a>
        <ul>
          <li><a title="Delete all files" id="clear-files" class="btn-floating red"><i class="material-icons">delete</i></a></li>
          <li><a title="Toggle autoprocess queue" id="toggle-process" class="btn-floating yellow"><i class="material-icons">pause</i></a></li>
        </ul>
      </div>
    </form>

  </div></div><!--card, card-content-->
</div></div><!--row, col s12-->


<div class="row"><div class="col s12">
  <div class="card"><div class="card-content">
    <span class="card-title">Metadata for your report</span>

    <form id="form-metadata" method="post" action="/generate">
      <div class="input-field">
        <i class="material-icons prefix">business</i>
        <label for="location"> Deployment Location </label>
        <input id="location" name="location" type="text">
      </div>

      <div class="input-field">
        <i class="material-icons prefix">comment</i>
        <label for="description"> Description (displayed on the title page)</label>
        <textarea id="description" name="description" type="textbox" class="materialize-textarea"></textarea>
      </div>

      <label for="upload"> Map file (optional): </label>
      <div class="input-field">
        <i class="material-icons prefix">my_location</i>
        <div class="file-field input-field">
          <div class="waves-effect waves-light btn blue">
            <span>File</span>
            <input type="file" name="file">
          </div>
          <div class="file-path-wrapper">
            <input class="file-path validate" type="text">
          </div>
        </div>
      </div>
      <br />

      <!-- Submit form -->
      <div class="row"><div class="col s12">
        <button id="modal-report" type="submit" class="waves-effect waves-light btn-large blue col l3 push-l9 m4 push-m8 s6 push-s6">
          <i class="material-icons right">send</i>Generate report
        </button>
      </div></div>

    </form>
  </div></div><!--card, card-content-->
</div></div><!--row, col s12-->

</div><!--section-->


<!-- Modal Structure -->
<div id="generate-modal" class="modal">
  <div class="modal-content">

    <h4>Generate report</h4>

    <div id="upload-files">
      <p class="caption error red-text">Please upload data files first</p>
    </div>

    <div id="upload-running" class="hide">
      <p class="caption">Please wait for file uploads to complete</p>
      <!-- Progress bar -->
      <div id="upload-progress" class="progress indigo darken-1">
        <div class="determinate blue "></div>
      </div>
    </div>

    <p id="upload-ready" class="hide caption">Click &quot;generate&quot; below to generate your report.</p>
  </div>

  <div class="modal-footer">
    <a href="#!" class="modal-action modal-close waves-effect waves-blue btn-flat ">Cancel</a>
    <a href="#!" id="generate-report" class="waves-effect waves-blue btn blue disabled">Generate</a>
  </div>
</div>


<script type="text/javascript">
$(function(){
  ALLOWED_TYPES = ['bin','bax','csv','txt'];

  filesUploading = 0;
  Dropzone.autoDiscover = false;

  var drz = new Dropzone(
    "form#file-drop",
    { 
      url: "/upload",
      method: "put", //"post", 
      maxFilesize: 512,
      accept: function(file, done) {
        var ext = file.name.split('.').pop().toLowerCase()
        if( $.inArray(ext, ALLOWED_TYPES) !== -1 ) {
          done()
        } else {
          done("Incorrect type: "+ ext)
        }
      }
  });

  incr_upload = function(file) {
    console.info("UPLOADING "+file.name)
    filesUploading++;
    upload_is_ready();
  }
  decr_upload = function(file) {
    console.info("DONE "+file.name)
    filesUploading--;
    upload_is_ready();
  }

  drz.on("addedfile", incr_upload);
  drz.on("complete",  decr_upload);
  drz.on("removedfile", decr_upload);

  drz.on("uploadprogress", function(file, progress) {
    $("#upload-progress div.determinate").css("width", progress + "%")
  });

  // Style & display functions
  upload_ready = function() {
    console.info("upload-ready")
    $('#upload-files').addClass("hide")
    $('#upload-running').addClass("hide")
    $('#upload-ready').removeClass("hide")
    $('#generate-report').removeClass("disabled")
  }

  upload_running = function() {
    console.info("upload-running")
    $('#upload-files').addClass("hide")
    $('#upload-running').removeClass("hide")
    $('#upload-ready').addClass("hide")
    $('#generate-report').addClass("disabled")
  }

  upload_is_ready = function() {
    if (filesUploading == 0 && drz.getAcceptedFiles().length > 0) {
      return upload_ready()   || true
    } else if(filesUploading > 0) {
      return upload_running() || false
    } else {
      return false
    }
  }
  
  // Show confirmation modal
  $("#modal-report").click(function(e){
    e.preventDefault()

    enable_submit = function() {
      if( ! upload_is_ready() )
        setTimeout(enable_submit, 200)
    }

    enable_submit()
    $('#generate-modal').openModal()
  });
  
  // Submit the metadata form and generate the report
  $('#generate-report').click(function(e){
    console.log("Generating report")
    drz.processQueue()
    if( upload_is_ready() ) {
      var data = new FormData();
      $.each($('#form-metadata')[0], function(i, e) {
        if( $(e).attr('name') ) {
          if( $(e).attr('type') === 'file' ) {
            data.append('file-'+i, e.files[0])
          } else {
            data.append($(e).attr('name'), $(e).val())
          }
        }
      })
      $.ajax({
        url: '/generate',
        data: data,
        cache: false,
        contentType: false,
        processData: false,
        type: 'POST',
//        success: function(data){
//          // Navigate onwards
//          window.location.href = "/job";
//        },
        complete: function(data){
          // Navigate onwards
          window.location.href = "/job";
        }
      })
    }
  })

  // Wipe any files uploaded to the server already
  $("#clear-files").click(function(e){
    $.post('/clear', function(files) {
      console.log("files-cleared")
      Materialize.toast('Files cleared from server', 4000)
      drz.removeAllFiles()
      filesUploading = 0
      $('#upload-files').removeClass("hide")
      $('#upload-running').addClass("hide")
    })
  })

  // Toggle automatic file uploads or queue multiple before submitting all
  $("#toggle-process").click(function(e){
    drz.options.autoProcessQueue = !drz.options.autoProcessQueue
    
    colors=["green","yellow"]
    icons=["play_arrow","pause"]
    $("#toggle-process").removeClass(colors[+(!drz.options.autoProcessQueue)])
                        .addClass(colors[+(drz.options.autoProcessQueue)])
    $("#toggle-process i.material-icons").html(icons[+(drz.options.autoProcessQueue)])
    
    Materialize.toast((drz.options.autoProcessQueue) ? "Uploading files automatically" : "Queueing files", 4000)
    drz.processQueue()
  })

  // Retrieve files already on the server
  $.get('/status', function(data) {
    if(data.files.length > 0)
      $('#file-drop').addClass("dz-started")

    for (f in data.files) {
      f=data.files[f]

      fileElement = Dropzone.createElement(
        drz.options.previewTemplate.trim()
      )
      $(fileElement).addClass("dz-processing dz-success dz-complete")
      $(fileElement).find("[data-dz-name]").text(f.original_name)
      $(fileElement).find("[data-dz-size]").html(drz.filesize(f.file_size))
      drz.previewsContainer.appendChild(fileElement)

      drz.files.push({
        'upload':{
          'progress':100,
          'bytesSent':f.file_size,
          'total':f.file_size,
        },
        'status':Dropzone.SUCCESS,
        'type':f.content_type,
        'name':f.original_name,
        'size':f.file_size,
        'accepted':true,
        'previewElement':fileElement
      })
    }
  })

  window.drz = drz
})
</script>
